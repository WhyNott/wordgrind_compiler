Predicates:
  # facts
  - <kitchen> is a room
  - <living room> is a room
  - <bathroom> is a room
  - <bedroom> is a room
  - <It's really shiny.> is the followup text for <Knife>
  - <It seems to be missing batteries.> is the followup text for <TV Remote>
  - <You're not really sure if they are AA or AAA.> is the followup text for <Batteries>
  - <It's slippery! > is the followup text for <Soap>
  - <kitchen> is connected to <living room>
  - <living room> is connected to <bathroom>
  - <living room> is connected to <bedroom>
  
  # logic
  - ?A and ?B are walkable:
      or:
        - ?A is connected to ?B
        - ?B is connected to ?A
#note to self:
# If I want multiple choices with the same name (and I do want that sometimes) I will need to represent them as a list rather than an object. It makes more sense that way, too.
#Actually, this causes a lot of problems. I will need to rethink this approach.
#Can I have an early action happen before the game starts.
default:
  Early actions:
    #Note: this still doesn't show either the name or the displays. 
    Begin examination:
      available when:
        - not: selected <Begin examination>
      displays:
        "What is happening with you&quest;"
        #note: sentences can't end with a quotation mark for whatever reason, fix it
      next deck:
        Self-examination
      options:
        once: true
        #hide name: true
        
    Show stats:
      available when:
        - Player is in ?Location
      displays:
        You are currently in ?Location.
      options:
        once: true
        hide name: true
  
        
  Choices:
    Walk from ?A to ?B:
      available when:
        - Player is in ?A
      such that:
        and:
          - ?B is a room
          - ?A is a room
          - ?A and ?B are walkable
      displays:
        You walk from ?A to ?B. 
      causes:
        - Player is in ?B #Note: it might be beneficial to have <Player is in ?_> and <?_ is in ?_> as unique 
        - removes: Player is in ?A

    Pick up ?Item:
      available when:
        - Player is in ?Place
        - ?Item is in ?Place
      such that:
        ?Followup is the followup text for ?Item
      displays:
        You have sucessfully picked up ?Item. ?Followup
      causes:
        - Player has ?Item
        - removes: <?Item is in ?Place>

    Drop ?Item:
      available when:
        - Player is in ?Place
        - Player has ?Item
      displays:
        You have dropped ?Item.
      causes:
        - ?Item is in ?Place
        - removes: <Player has ?Item>

    Use computer:
      available when:
        - Player is in <bedroom>
      next deck:
        Computer

    "Watch TV":
      available when:
        - Player is in <living room>
        - Player has <TV Remote>
        - Remote has batteries
      displays:
        You watch some TV, but nothing very interesting is on.

    "Watch TV.":
      available when:
        - Player is in <living room>
        - not: Player has <TV Remote>
      displays:
        You can't turn on the TV, becuase you misplaced the remote somewhere.

    "Watch TV..":
      available when:
        - Player is in <living room>
        - Player has <TV Remote>
        - not: Remote has batteries
      displays:
        You try to turn on the TV, but to no avail. You realize it does not have batteries! You took them out when you were babysitting your nephiew last week. His dumb cartoons were giving you a headache. 


    Insert batteries into remote:
      available when:
        - Player has <TV Remote>
        - Player has <Batteries>
      causes:
        - Remote has batteries
        - removes: Player has <Batteries>
        
Computer:
  Choices:
    Check your email:
      displays:
        No new messages!
    Play minesweeper:
      displays:
        This almost goes well, but you're bad at counting so you loose.

Self-examination:
  Choices:
    Examine yourself:
      displays:
        You feel prtty bad. You are so weak that if it wasn't for your splitting headache you would go straight to sleep. 
        
          
Initial state:
  condition:
    - Player is in <bedroom>
    - <Knife> is in <kitchen>
    - <Batteries> is in <kitchen>
    - <Soap> is in <bathroom>
    - <TV Remote> is in <living room>
  displays:
    You wake up in a cold sweat. You had horrible nightmares all night, and now you have a horrible headache.
